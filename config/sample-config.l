#!/user/bin/env roseus

;; 以下のようにキーコンフィグを書く。
;; 関数定義などはロード先でやる。

;; ボタン番号は次の通り
;;  ----------------------
;; |  0  1 ...  6  7      |
;; | -- -- --- -- --      |
;; |  8  9 ... 14 15 | 16 |
;; | 17 18 ... 23 24 | 25 |
;; |  .  . .    .  . | .  |
;; |  .  .   .  .  . | .  |
;; | 62 63 ... 68 69 | 70 |
;; | 71 72 ... 77 78 | 79 |
;;  ----------------------

;; (こっちにした方が分かりやすいかな？)
;;  ----------------------
;; |  1  2 ...  7  8      |
;; | -- -- --- -- --      |
;; | 11 12 ... 17 18 | 19 |
;; | 21 22 ... 27 28 | 29 |
;; |  .  . .    .  . | .  |
;; |  .  .   .  .  . | .  |
;; | 71 72 ... 77 78 | 79 |
;; | 81 82 ... 87 88 | 89 |
;;  ----------------------

;; ボタン番号と実行したい式の対応を書く。
;; 割り当てられたボタンはオレンジ色に光る。
'((funcs
   ( 8 (print "hello!"))
   ( 9 (send *sr* :reset-pose))
   (10 (send *irtviewer* :draw-objects))
   (11 (send *ri* :angle-vector (send *sr* :angle-vector) 1000))
   ;; 複数行の式はprognでまとめてください。
   (17 (progn (send *sr* :reset-pose)
              (x::window-main-one)
              (send *ri* :angle-vector (send *sr* :angle-vector))))
   ;; 逆に一つの式なら何でもいい
   (18 (if (and (boundp '*state*) *state*)
           (progn (print "state: t")
                  (print "second print"))
         (print "state: nil")))
   ;; 以下はラジオボタンの説明用
   (26 (setq *state* t))
   (27 (setq *state* nil))
   (35 (send *ri* :go-velocity 0.1 0 0))
   (36 (send *ri* :go-stop))
   (37 (send *ri* :go-velocity -0.1 0 0))
    )

  ;; ここで指定したボタンは割り当てがあっても光らない
  (non-led
    (9 10)
    )

  ;; 次のように書くとラジオボタン設定になり、
  ;; 組の中で最後に押されたボタンが赤、それ以外が緑に光る。
  ;; 起動時に赤くなるのは組の最初に書いたボタン。
  (radio-buttons
   (26 27)
   (36 35 37)
   )
  )
